<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.app.authopia.mapper.PostMapper">

    <!--  게시글 목록  -->
    <select id="selectAll" resultType="PostDTO">
        SELECT P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM
        (
        SELECT ROWNUM R,P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM
        (
        SELECT P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM TBL_MEMBER M JOIN TBL_POST P
        ON M.ID = p.MEMBER_ID AND POST_IS_BLINDED = 0
        ORDER BY
        <choose>
            <when test="postType.order == 'new'">
                POST_REGISTER_DATE
            </when>
            <otherwise>
                POST_VIEW_COUNT
            </otherwise>
        </choose>
        DESC
        ) P
        <![CDATA[
                WHERE ROWNUM <= #{pagination.page} * #{pagination.rowCount}
            ]]> AND POST_TYPE = #{postType.type}
        <choose>
            <when test="!postType.keyword.equals('')">
                AND (POST_NAME LIKE '%'||#{postType.keyword}||'%' OR POST_CONTENT LIKE '%'||#{postType.keyword}||'%' OR
                MEMBER_NAME LIKE '%'||#{postType.keyword}||'%')
            </when>
        </choose>
        <![CDATA[
        ) P WHERE R > (#{pagination.page} - 1) * #{pagination.rowCount}
        ]]>
    </select>

    <!-- 게시글 추가 -->
    <insert id="insert">
        <selectKey keyProperty="id" order="BEFORE" resultType="long">
            SELECT SEQ_POST.NEXTVAL FROM DUAL
        </selectKey>
        INSERT INTO TBL_POST
        (ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_CONTENT)
        VALUES(#{id}, #{memberId}, #{postType}, #{postName}, #{postContent})
    </insert>

    <!--  게시글 조회  -->
    <select id="select" resultType="postDTO">
        SELECT P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM  TBL_MEMBER M JOIN TBL_POST P
        ON M.ID = p.MEMBER_ID AND p.id = #{id} AND POST_IS_BLINDED = 0
    </select>

    <!-- 게시글 수정 -->
    <update id="update">
        update TBL_POST
        SET POST_NAME = #{postName}, POST_CONTENT = #{postContent}, POST_UPDATE_DATE= SYSDATE
        WHERE ID = #{id}
    </update>

    <!-- 게시글 삭제 -->
    <select id="delete">
        update TBL_POST
        SET POST_IS_BLINDED = 1
        WHERE ID = #{id}
    </select>

    <!--  게시글 복구  -->
    <select id="restore">
        update TBL_POST
        SET POST_IS_BLINDED = 0
        WHERE ID = #{id}
    </select>

    <!-- 메인페이지에서 최신 인기 포스트 조회 -->
    <select id="selectMain" resultType="postDTO">
        SELECT R, P.ID, MEMBER_ID, POST_NAME, POST_VIEW_COUNT, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_CONTENT, MEMBER_NAME
        FROM
            (
            SELECT ROWNUM R, P.ID, MEMBER_ID, POST_NAME, POST_VIEW_COUNT, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_CONTENT, MEMBER_NAME
            FROM TBL_MEMBER M JOIN
                (
                SELECT ROWNUM, ID, MEMBER_ID, POST_NAME, POST_VIEW_COUNT, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_CONTENT
                FROM
                    (
                    SELECT ROWNUM, ID, MEMBER_ID, POST_NAME, POST_VIEW_COUNT, POST_REGISTER_DATE, POST_UPDATE_DATE, POST_CONTENT
                    FROM TBL_POST
        <![CDATA[
                    WHERE POST_TYPE = 'writing' AND ROWNUM <= 20 AND POST_IS_BLINDED = 0
                    ORDER BY ID DESC
                    )
                ORDER BY POST_VIEW_COUNT DESC
                ) P ON M.ID = P.MEMBER_ID AND ROWNUM <= #{pagination.page} * #{pagination.rowCount}
            ) P WHERE R > (#{pagination.page} - 1) * #{pagination.rowCount}

        ]]>
    </select>
<!--관리자 페이지 전체 조회-->
    <select id="selectManager" resultType="PostDTO">
        SELECT P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM TBL_MEMBER M JOIN TBL_POST P
        ON M.ID = p.MEMBER_ID AND POST_IS_BLINDED = 0
        ORDER BY
        <choose>
            <when test="order == 'new'">
                POST_REGISTER_DATE
            </when>
            <otherwise>
                POST_VIEW_COUNT
            </otherwise>
        </choose>
        DESC
    </select>

    <select id="selectCountOfPost" resultType="_int">
        SELECT COUNT(P.ID)
        FROM TBL_MEMBER M JOIN TBL_POST P
        ON M.ID = P.MEMBER_ID AND POST_TYPE = #{type}
        <choose>
            <when test="!keyword.equals('')">
                AND (POST_NAME LIKE '%'||#{keyword}||'%' OR POST_CONTENT LIKE '%'||#{keyword}||'%' OR MEMBER_NAME LIKE
                '%'||#{keyword}||'%')
            </when>
        </choose>
    </select>

    <update id="updateViewCount">
        update TBL_POST
        SET  POST_VIEW_COUNT = POST_VIEW_COUNT+1
        WHERE ID = #{id}
    </update>

    <!--내 게시글 목록-->
    <select id="selectAllMyPost" resultType="PostDTO">
        SELECT P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM
        (
        SELECT ROWNUM R,P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM
        (
        SELECT P.ID, MEMBER_ID, POST_TYPE, POST_NAME, POST_VIEW_COUNT, POST_RECOMMEND, POST_REGISTER_DATE,
        POST_UPDATE_DATE, POST_CONTENT, POST_IS_BLINDED, MEMBER_NAME
        FROM TBL_MEMBER M JOIN TBL_POST P
        ON M.ID = p.MEMBER_ID AND POST_IS_BLINDED = 0 AND p.MEMBER_ID = #{postType.memberId}
        ORDER BY
        <choose>
            <when test="postType.order == 'new'">
                POST_REGISTER_DATE
            </when>
            <otherwise>
                POST_VIEW_COUNT
            </otherwise>
        </choose>
        DESC
        ) P
        <![CDATA[
                WHERE ROWNUM <= #{pagination.page} * #{pagination.rowCount}
            ]]> AND POST_TYPE = #{postType.type}
        <![CDATA[
        ) P WHERE R > (#{pagination.page} - 1) * #{pagination.rowCount}
        ]]>
    </select>

    <select id="selectCountOfMyPost" resultType="_int">
        SELECT COUNT(P.ID)
        FROM TBL_MEMBER M JOIN TBL_POST P
        ON M.ID = P.MEMBER_ID AND POST_TYPE = #{postType.type} AND P.MEMBER_ID = #{memberId}
    </select>

</mapper>